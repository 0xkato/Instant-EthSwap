{"ast":null,"code":"import _regeneratorRuntime from \"/Users/emtoli/Desktop/code/Dapps/eth_swap/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/emtoli/Desktop/code/Dapps/eth_swap/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/emtoli/Desktop/code/Dapps/eth_swap/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"/Users/emtoli/Desktop/code/Dapps/eth_swap/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/emtoli/Desktop/code/Dapps/eth_swap/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _createClass from \"/Users/emtoli/Desktop/code/Dapps/eth_swap/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/emtoli/Desktop/code/Dapps/eth_swap/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/emtoli/Desktop/code/Dapps/eth_swap/src/components/App.js\";\nimport React, { Component } from 'react';\nimport Web3 from 'web3';\nimport EthSwap from \"../abis/EthSwap.json\";\nimport Token from \"../abis/Token.json\";\nimport Navbar from './Navbar';\nimport './App.css';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  _createClass(App, [{\n    key: \"componentWillMount\",\n    value: function () {\n      var _componentWillMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.loadweb3();\n\n              case 2:\n                _context.next = 4;\n                return this.loadblockchainData();\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentWillMount() {\n        return _componentWillMount.apply(this, arguments);\n      }\n\n      return componentWillMount;\n    }()\n  }, {\n    key: \"loadblockchainData\",\n    value: function () {\n      var _loadblockchainData = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        var web3, accounts, ethBalance, networkId, tokenData, token, tokenBalance, EthSwapData, ethSwap;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                web3 = window.web3;\n                _context2.next = 3;\n                return web3.eth.getAccounts();\n\n              case 3:\n                accounts = _context2.sent;\n                this.setState({\n                  account: accounts[0]\n                }); // Get the Eth balance of the connected wallet\n\n                _context2.next = 7;\n                return web3.eth.getBalance(this.state.account);\n\n              case 7:\n                ethBalance = _context2.sent;\n                this.setState({\n                  ethBalance: ethBalance\n                }); // confirms that you are on the right network\n\n                _context2.next = 11;\n                return web3.eth.net.getId();\n\n              case 11:\n                networkId = _context2.sent;\n                tokenData = Token.networks[networkId];\n\n                if (!tokenData) {\n                  _context2.next = 23;\n                  break;\n                }\n\n                token = new web3.eth.Contract(Token.abi, tokenData.address);\n                this.setState({\n                  token: token\n                }); // get the token balance of the connected wallet\n\n                _context2.next = 18;\n                return token.methods.balanceOf(this.state.account).call();\n\n              case 18:\n                tokenBalance = _context2.sent;\n                console.log(\"tokenBalance\", tokenBalance.toString());\n                this.setState({\n                  tokenBalance: tokenBalance.toString()\n                });\n                _context2.next = 24;\n                break;\n\n              case 23:\n                window.alert(\"Token contract not deployed to the network that you are on\");\n\n              case 24:\n                // load EthSwap\n                EthSwapData = Token.networks[networkId];\n\n                if (EthSwapData) {\n                  ethSwap = new web3.eth.Contract(EthSwap.abi, EthSwapData.address);\n                  this.setState({\n                    ethSwap: ethSwap\n                  });\n                } else {\n                  window.alert(\" EthSwap contract not deployed to the network that you are on\");\n                }\n\n                console.log(this.state.ethSwap);\n\n              case 27:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function loadblockchainData() {\n        return _loadblockchainData.apply(this, arguments);\n      }\n\n      return loadblockchainData;\n    }()\n  }, {\n    key: \"loadweb3\",\n    value: function () {\n      var _loadweb = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3() {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                if (!window.ethereum) {\n                  _context3.next = 6;\n                  break;\n                }\n\n                window.web3 = new Web3(window.ethereum);\n                _context3.next = 4;\n                return window.ethereum.enable();\n\n              case 4:\n                _context3.next = 7;\n                break;\n\n              case 6:\n                if (window.web3) {\n                  window.web3 = new Web3(window.web3.currentProvider);\n                } else {\n                  window.alert(\"Non-Ethereum browser detedted. You should consider trying Metamask!\");\n                }\n\n              case 7:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      function loadweb3() {\n        return _loadweb.apply(this, arguments);\n      }\n\n      return loadweb3;\n    }()\n  }]);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      account: \"\",\n      token: {},\n      ethSwap: {},\n      ethBalance: \"0\",\n      tokenBalance: \"0\"\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(Navbar, {\n        account: this.state.account,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"container-fluid mt-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(\"main\", {\n        role: \"main\",\n        className: \"col-lg-12 d-flex text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"content mr-auto ml-auto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, \" Hello World\"))))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/emtoli/Desktop/code/Dapps/eth_swap/src/components/App.js"],"names":["React","Component","Web3","EthSwap","Token","Navbar","App","loadweb3","loadblockchainData","web3","window","eth","getAccounts","accounts","setState","account","getBalance","state","ethBalance","net","getId","networkId","tokenData","networks","token","Contract","abi","address","methods","balanceOf","call","tokenBalance","console","log","toString","alert","EthSwapData","ethSwap","ethereum","enable","currentProvider","props"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport Web3 from 'web3'\nimport EthSwap from \"../abis/EthSwap.json\"\nimport Token from \"../abis/Token.json\"\nimport Navbar from './Navbar'\nimport './App.css'\n\nclass App extends Component {\n\n  async componentWillMount() {\n    await this.loadweb3()\n    await this.loadblockchainData()\n  }\n\n  async loadblockchainData() {\n    const web3 = window.web3\n\n    const accounts = await web3.eth.getAccounts()\n    this.setState({ account: accounts[0] })\n\n    // Get the Eth balance of the connected wallet\n    const ethBalance = await web3.eth.getBalance(this.state.account)\n    this.setState({ ethBalance })\n\n    // confirms that you are on the right network\n    const networkId = await web3.eth.net.getId()\n    const tokenData = Token.networks[networkId]\n    if (tokenData) {\n      const token = new web3.eth.Contract(Token.abi, tokenData.address)\n      this.setState({ token })\n      // get the token balance of the connected wallet\n      let tokenBalance = await token.methods.balanceOf(this.state.account).call()\n      console.log(\"tokenBalance\", tokenBalance.toString())\n      this.setState({ tokenBalance: tokenBalance.toString() })\n    } else {\n      window.alert(\"Token contract not deployed to the network that you are on\")\n    }\n\n    // load EthSwap\n    const EthSwapData = Token.networks[networkId]\n    if (EthSwapData) {\n      const ethSwap = new web3.eth.Contract(EthSwap.abi, EthSwapData.address)\n      this.setState({ ethSwap })\n    } else {\n      window.alert(\" EthSwap contract not deployed to the network that you are on\")\n    }\n\n    console.log(this.state.ethSwap)\n\n  }\n\n  async loadweb3() {\n    if (window.ethereum) {\n      window.web3 = new Web3(window.ethereum)\n      await window.ethereum.enable()\n    }\n    else if (window.web3) {\n      window.web3 = new Web3(window.web3.currentProvider)\n    }\n    else {\n      window.alert(\"Non-Ethereum browser detedted. You should consider trying Metamask!\")\n    }\n  }\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      account: \"\",\n      token: {},\n      ethSwap: {},\n      ethBalance: \"0\",\n      tokenBalance: \"0\"\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <Navbar account={this.state.account} />\n        <div className=\"container-fluid mt-5\">\n          <div className=\"row\">\n            <main role=\"main\" className=\"col-lg-12 d-flex text-center\">\n              <div className=\"content mr-auto ml-auto\">\n                <h1> Hello World</h1>\n              </div>\n            </main>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}